{
  "stats": {
    "suites": 4,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-08-18T23:45:18.199Z",
    "end": "2025-08-18T23:45:33.256Z",
    "duration": 15057
  },
  "results": [
    {
      "uuid": "4a6fe042-0bea-403d-9e9c-bdec4f7701c8",
      "title": "",
      "fullFile": "cypress/e2e/api.spec.js",
      "file": "cypress/e2e/api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5094fb01-c4c0-4619-a9ff-228cb5401c1e",
          "title": "Api",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create Usage Data - Success",
              "fullTitle": "Api Create Usage Data - Success",
              "timedOut": null,
              "duration": 900,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login();\ncy.fixture('usage-post.json').then(data => {\n  cy.POSTUsageData(Cypress.config().baseUrl, data.usageDataValid).then(response => {\n    // Status code check\n    expect(response.status, 'status code').to.equal(200);\n    // Response structure check\n    expect(response.body, 'response body').to.have.property('message', 'Energy usage saved successfully!');\n  });\n});",
              "err": {},
              "uuid": "2c2cc557-8041-40b3-bc91-6fe2e615ea0d",
              "parentUUID": "5094fb01-c4c0-4619-a9ff-228cb5401c1e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Usage Data - Failure",
              "fullTitle": "Api Create Usage Data - Failure",
              "timedOut": null,
              "duration": 821,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login();\ncy.fixture('usage-post.json').then(data => {\n  cy.POSTUsageData(Cypress.config().baseUrl, data.usageDataInvalid).then(response => {\n    // Status code check\n    expect(response.status, 'status code').to.equal(400);\n    // Response structure check\n    expect(response.body, 'response body').to.have.property('message', 'Invalid data format');\n  });\n});",
              "err": {},
              "uuid": "44dd6ac9-7c27-44d0-97e7-4b8089314c01",
              "parentUUID": "5094fb01-c4c0-4619-a9ff-228cb5401c1e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET all usage records and assert",
              "fullTitle": "Api GET all usage records and assert",
              "timedOut": null,
              "duration": 816,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login();\ncy.fixture('usage-get.json').as('expectedUsage'); // load expected data\ncy.GETUsageData(Cypress.config().baseUrl).then(response => {\n  cy.get('@expectedUsage').then(usageData => {\n    expect(response.status).to.equal(200);\n    expect(response.body.records, 'records array').to.be.an('array').that.is.not.empty;\n    usageData.valid.records.forEach(expectedRecord => {\n      const match = response.body.records.find(r => r.nmi === expectedRecord.nmi && r.timestamp === expectedRecord.timestamp && Number(r.consumption) === Number(expectedRecord.consumption) && r.unit === expectedRecord.unit);\n      expect(match, `Record not found: ${expectedRecord.nmi}`).to.exist;\n    });\n    cy.log('GET UsageData response: ' + JSON.stringify(response.body));\n  });\n});",
              "err": {},
              "uuid": "b41dbfdd-c280-4ac4-8fd8-cd1ba2b48d18",
              "parentUUID": "5094fb01-c4c0-4619-a9ff-228cb5401c1e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET all usage records and assert invalid records do not exist",
              "fullTitle": "Api GET all usage records and assert invalid records do not exist",
              "timedOut": null,
              "duration": 786,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login();\ncy.fixture('usage-get.json').as('expectedUsage');\ncy.GETUsageData(Cypress.config().baseUrl).then(response => {\n  cy.get('@expectedUsage').then(usageData => {\n    expect(response.status).to.equal(200);\n    usageData.invalid.records.forEach(invalidRecord => {\n      const match = response.body.records.find(r => r.nmi === invalidRecord.nmi && r.timestamp === invalidRecord.timestamp && Number(r.consumption) === Number(invalidRecord.consumption) && r.unit === invalidRecord.unit);\n      expect(match, `Invalid record should not exist: ${invalidRecord.nmi}`).to.not.exist;\n    });\n    cy.log('GET UsageData response: ' + JSON.stringify(response.body));\n  });\n});",
              "err": {},
              "uuid": "d32e7769-1cff-4ae8-8f36-9366b268b846",
              "parentUUID": "5094fb01-c4c0-4619-a9ff-228cb5401c1e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login API - Success",
              "fullTitle": "Api Login API - Success",
              "timedOut": null,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('test-data.json').then(data => {\n  cy.POSTLogin(Cypress.config().baseUrl, data.validCredentials).then(response => {\n    expect(response.status).to.equal(200);\n    expect(response.body).to.deep.equal({\n      message: \"Login successful\",\n      token: \"mock-jwt-token-12345\"\n    });\n  });\n});",
              "err": {},
              "uuid": "3dff5ae7-c10c-48f2-b221-95ec42b87e0b",
              "parentUUID": "5094fb01-c4c0-4619-a9ff-228cb5401c1e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login API - Failure",
              "fullTitle": "Api Login API - Failure",
              "timedOut": null,
              "duration": 17,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('test-data.json').then(data => {\n  cy.POSTLogin(Cypress.config().baseUrl, data.invalidCredentials).then(response => {\n    expect(response.status).to.equal(401);\n    expect(response.body).to.have.property('message', 'Invalid credentials');\n  });\n});",
              "err": {},
              "uuid": "0f9f5006-4750-4112-a782-0d1cb1c80dcb",
              "parentUUID": "5094fb01-c4c0-4619-a9ff-228cb5401c1e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c2cc557-8041-40b3-bc91-6fe2e615ea0d",
            "44dd6ac9-7c27-44d0-97e7-4b8089314c01",
            "b41dbfdd-c280-4ac4-8fd8-cd1ba2b48d18",
            "d32e7769-1cff-4ae8-8f36-9366b268b846",
            "3dff5ae7-c10c-48f2-b221-95ec42b87e0b",
            "0f9f5006-4750-4112-a782-0d1cb1c80dcb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3359,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0ab50a77-3666-4842-816c-0e3f10c4a6e9",
      "title": "",
      "fullFile": "cypress/e2e/enter-usage.spec.js",
      "file": "cypress/e2e/enter-usage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d2858297-94a6-4f0d-8abf-d6f77dd86f2e",
          "title": "Enter Energy Usage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fills the multi-step form and saves a new record",
              "fullTitle": "Enter Energy Usage Fills the multi-step form and saves a new record",
              "timedOut": null,
              "duration": 1760,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomPrefix = (0, _dataGenerator.getRandomDropdownValue)();\n_enterUsage.enterUsagePage.nmiPrefix().select(randomPrefix).should('have.value', randomPrefix);\n_enterUsage.enterUsagePage.nmiSuffix().type((0, _dataGenerator.getRandomNmiSuffix)());\n_enterUsage.enterUsagePage.submit().click();\n_enterUsage.enterUsagePage.usageInput().type((0, _dataGenerator.getRandomUsage)());\n_enterUsage.enterUsagePage.save().filter(':visible').should('be.enabled').click();\ncy.url().should('include', '/dashboard');",
              "err": {},
              "uuid": "17b6ef6c-232b-4891-8c57-aaf23bce3cbf",
              "parentUUID": "d2858297-94a6-4f0d-8abf-d6f77dd86f2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid data show error",
              "fullTitle": "Enter Energy Usage Invalid data show error",
              "timedOut": null,
              "duration": 1254,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_enterUsage.enterUsagePage.nmiPrefix().select('NEM');\n_enterUsage.enterUsagePage.nmiSuffix().type('12345');\n_enterUsage.enterUsagePage.submit().click();\ncy.contains('div', 'Invalid form data: invalid NMI').should('be.visible');",
              "err": {},
              "uuid": "6179a969-cdf3-4bb5-b5e2-02d9b5904d0f",
              "parentUUID": "d2858297-94a6-4f0d-8abf-d6f77dd86f2e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "17b6ef6c-232b-4891-8c57-aaf23bce3cbf",
            "6179a969-cdf3-4bb5-b5e2-02d9b5904d0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3014,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d5cd90a8-21d9-460b-a552-5d9a7faafe93",
      "title": "",
      "fullFile": "cypress/e2e/login.spec.js",
      "file": "cypress/e2e/login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2d822b03-331e-4244-9419-72d3ba9eb706",
          "title": "Authentication",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Happy path: logs in with valid credentials",
              "fullTitle": "Authentication Happy path: logs in with valid credentials",
              "timedOut": null,
              "duration": 883,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('test-data.json').then(data => {\n  _login.loginPage.username().type(data.validCredentials.username);\n  _login.loginPage.password().type(data.validCredentials.password);\n  _login.loginPage.submit().click();\n  // assert redirect to home\n  cy.url({\n    timeout: 30000\n  }).should('include', '/home');\n  cy.get('h2.chakra-heading', {\n    timeout: 10000\n  }).should('be.visible').and('contain', 'Welcome to your assignment!');\n});",
              "err": {},
              "uuid": "5083b70e-84f6-459f-b8e5-ce27c81c41ad",
              "parentUUID": "2d822b03-331e-4244-9419-72d3ba9eb706",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid credentials show error",
              "fullTitle": "Authentication Invalid credentials show error",
              "timedOut": null,
              "duration": 670,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('test-data.json').then(data => {\n  _login.loginPage.username().type(data.invalidCredentials.username);\n  _login.loginPage.password().type(data.invalidCredentials.password);\n  _login.loginPage.submit().click();\n  cy.contains('div', 'Something went wrong!').should('be.visible');\n});",
              "err": {},
              "uuid": "322d2386-9b29-45b8-b7a1-d4631aaebfcf",
              "parentUUID": "2d822b03-331e-4244-9419-72d3ba9eb706",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5083b70e-84f6-459f-b8e5-ce27c81c41ad",
            "322d2386-9b29-45b8-b7a1-d4631aaebfcf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1553,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "abca3aa6-77ca-4bf0-b46f-521d78c4a7df",
      "title": "",
      "fullFile": "cypress/e2e/mock-api.spec.js",
      "file": "cypress/e2e/mock-api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1819d8f8-18ad-40d1-9eb8-024daa67a4e2",
          "title": "Mock Api ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create Usage Data - Success",
              "fullTitle": "Mock Api  Create Usage Data - Success",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usage-post.json').then(data => {\n  cy.mockPOSTUsage();\n  cy.POSTUsageData(Cypress.config().baseUrl, data.usageDataValid).then(response => {\n    expect(response.status).to.equal(200);\n    expect(response.body.message).to.equal('Energy usage saved successfully!');\n  });\n});",
              "err": {},
              "uuid": "3efecacd-db7c-4821-89ca-660ef9ec08e3",
              "parentUUID": "1819d8f8-18ad-40d1-9eb8-024daa67a4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Usage Data - Failure",
              "fullTitle": "Mock Api  Create Usage Data - Failure",
              "timedOut": null,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usage-post.json').then(data => {\n  cy.mockPOSTUsageInvalid();\n  cy.POSTUsageData(Cypress.config().baseUrl, data.usageDataInvalid).then(response => {\n    expect(response.status).to.equal(400);\n    expect(response.body.message).to.equal('Invalid data format');\n  });\n});",
              "err": {},
              "uuid": "f1ca9114-b0e5-460e-a213-5c5ac4012177",
              "parentUUID": "1819d8f8-18ad-40d1-9eb8-024daa67a4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET all usage records - valid",
              "fullTitle": "Mock Api  GET all usage records - valid",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('usage-get.json').then(data => {\n  cy.mockUsageData(data.valid.records);\n  cy.visit('/dashboard');\n  cy.wait('@getUsage').then(interception => {\n    expect(interception.response.statusCode).to.eq(200);\n    expect(interception.response.body.message).to.equal('Able to verify json data');\n  });\n});",
              "err": {},
              "uuid": "a3c94556-9a5d-4c74-b0ff-00c6c13eb165",
              "parentUUID": "1819d8f8-18ad-40d1-9eb8-024daa67a4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET all usage records - invalid",
              "fullTitle": "Mock Api  GET all usage records - invalid",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.mockUsageDataNotFound();\ncy.visit('/dashboard');\ncy.wait('@getUsageNotFound').then(interception => {\n  expect(interception.response.statusCode).to.eq(404);\n  expect(interception.response.body.message).to.equal('The requested usage file could not be located.');\n});",
              "err": {},
              "uuid": "fc3ec206-6833-4701-bd77-57f45c19631e",
              "parentUUID": "1819d8f8-18ad-40d1-9eb8-024daa67a4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login API - Success",
              "fullTitle": "Mock Api  Login API - Success",
              "timedOut": null,
              "duration": 853,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('test-data.json').then(data => {\n  cy.mockLogin(data.validCredentials.username, data.validCredentials.password);\n  cy.login();\n  cy.wait('@postLogin').then(interception => {\n    expect(interception.response.statusCode).to.eq(200);\n    expect(interception.response.body.message).to.eq('Login successfully');\n  });\n  cy.url().should('include', '/home');\n});",
              "err": {},
              "uuid": "9624bd7d-8953-4a68-b7f1-473fdbb90a1e",
              "parentUUID": "1819d8f8-18ad-40d1-9eb8-024daa67a4e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login API - Failure",
              "fullTitle": "Mock Api  Login API - Failure",
              "timedOut": null,
              "duration": 807,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('test-data.json').then(data => {\n  cy.mockLoginFailure(); // intercept with 401\n  cy.login();\n  cy.wait('@postLoginFail').then(interception => {\n    expect(interception.response.statusCode).to.eq(401);\n    expect(interception.response.body.message).to.eq('Invalid credentials');\n  });\n  cy.url().should('include', '/login'); // should stay on login page\n});",
              "err": {},
              "uuid": "27e518fb-37fa-4c2f-b4a3-79047e87cbb7",
              "parentUUID": "1819d8f8-18ad-40d1-9eb8-024daa67a4e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3efecacd-db7c-4821-89ca-660ef9ec08e3",
            "f1ca9114-b0e5-460e-a213-5c5ac4012177",
            "a3c94556-9a5d-4c74-b0ff-00c6c13eb165",
            "fc3ec206-6833-4701-bd77-57f45c19631e",
            "9624bd7d-8953-4a68-b7f1-473fdbb90a1e",
            "27e518fb-37fa-4c2f-b4a3-79047e87cbb7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2013,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}