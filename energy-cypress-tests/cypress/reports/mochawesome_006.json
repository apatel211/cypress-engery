{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-16T16:33:40.751Z",
    "end": "2025-08-16T16:33:44.649Z",
    "duration": 3898,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8ab3da1f-eb98-4492-aeda-9f123e3124bc",
      "title": "",
      "fullFile": "cypress/e2e/api.spec.js",
      "file": "cypress/e2e/api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b3803c3f-6872-4850-8802-be1cfdeec10a",
          "title": "api page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create Usage Data - Success",
              "fullTitle": "api page Create Usage Data - Success",
              "timedOut": null,
              "duration": 911,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login();\ncy.POSTUsageData(Cypress.config().baseUrl).then(response => {\n  // Status code check\n  expect(response.status, 'status code').to.equal(200);\n  // Response structure check\n  expect(response.body, 'response body').to.have.property('message', 'Energy usage saved successfully!');\n});",
              "err": {},
              "uuid": "ac103bbe-1ca5-490f-9a80-7c5670af7995",
              "parentUUID": "b3803c3f-6872-4850-8802-be1cfdeec10a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET: Fetch all usage records and assert",
              "fullTitle": "api page GET: Fetch all usage records and assert",
              "timedOut": null,
              "duration": 820,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login();\ncy.fixture('usage-get.json').as('expectedUsage'); // load expected data\ncy.GETUsageData(Cypress.config().baseUrl).then(response => {\n  cy.get('@expectedUsage').then(usageData => {\n    // Assertions in test\n    expect(response.status).to.equal(200);\n    expect(response.body.records, 'records array').to.be.an('array').that.is.not.empty;\n    expect(response.body.records, 'records include fixture data').to.deep.include.members(usageData.records);\n    cy.log('GET UsageData response: ' + JSON.stringify(response.body));\n  });\n});",
              "err": {},
              "uuid": "abec8ee8-7017-46b8-8741-85196c312c21",
              "parentUUID": "b3803c3f-6872-4850-8802-be1cfdeec10a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Usage Data - Failure",
              "fullTitle": "api page Create Usage Data - Failure",
              "timedOut": null,
              "duration": 804,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.login();\ncy.fixture('usage-post.json').then(data => {\n  // Create invalid request (missing required field)\n  const invalidData = _objectSpread(_objectSpread({}, data), {}, {\n    nmi: ''\n  });\n  cy.request({\n    method: \"POST\",\n    url: `${Cypress.config().baseUrl}/api/usage`,\n    failOnStatusCode: false,\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    },\n    body: invalidData\n  }).then(response => {\n    expect(response.status, 'status code').to.equal(400); // or your expected error code\n    expect(response.body, 'error message').to.have.property('message', 'Invalid data format');\n  });\n});",
              "err": {},
              "uuid": "f5c46f60-9f09-4d8f-912e-87ec6869cafa",
              "parentUUID": "b3803c3f-6872-4850-8802-be1cfdeec10a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login API - Success",
              "fullTitle": "api page Login API - Success",
              "timedOut": null,
              "duration": 21,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('testdata.json').then(data => {\n  cy.POSTLogin(Cypress.config().baseUrl, data.validCredentials).then(response => {\n    expect(response.status).to.equal(200);\n    expect(response.body).to.deep.equal({\n      message: \"Login successful\",\n      token: \"mock-jwt-token-12345\"\n    });\n  });\n});",
              "err": {},
              "uuid": "318b40cb-6d6b-4382-ad94-fa566cab4787",
              "parentUUID": "b3803c3f-6872-4850-8802-be1cfdeec10a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login API - Failure",
              "fullTitle": "api page Login API - Failure",
              "timedOut": null,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('testdata.json').then(data => {\n  cy.POSTLogin(Cypress.config().baseUrl, data.invalidCredentials).then(response => {\n    expect(response.status).to.equal(401);\n    expect(response.body).to.have.property('message', 'Invalid credentials');\n  });\n});",
              "err": {},
              "uuid": "6165f2ad-7269-49ed-90a9-018350cb8638",
              "parentUUID": "b3803c3f-6872-4850-8802-be1cfdeec10a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ac103bbe-1ca5-490f-9a80-7c5670af7995",
            "abec8ee8-7017-46b8-8741-85196c312c21",
            "f5c46f60-9f09-4d8f-912e-87ec6869cafa",
            "318b40cb-6d6b-4382-ad94-fa566cab4787",
            "6165f2ad-7269-49ed-90a9-018350cb8638"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2575,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}